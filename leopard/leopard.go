// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Thu, 23 Aug 2018 13:06:06 BST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package leopard

/*
#cgo LDFLAGS: liblibleopard.a -fopenmp -lstdc++
#include "leopard.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// leo_init_ function as declared in leopard-go/leopard.h:105
func leo_init_(version int32) int32 {
	cversion, _ := (C.int)(version), cgoAllocsUnknown
	__ret := C.leo_init_(cversion)
	__v := (int32)(__ret)
	return __v
}

// leo_result_string function as declared in leopard-go/leopard.h:127
func leo_result_string(result LeopardResult) string {
	cresult, _ := (C.LeopardResult)(result), cgoAllocsUnknown
	__ret := C.leo_result_string(cresult)
	__v := packPCharString(__ret)
	return __v
}

// leo_encode_work_count function as declared in leopard-go/leopard.h:143
func leo_encode_work_count(original_count uint32, recovery_count uint32) uint32 {
	coriginal_count, _ := (C.uint)(original_count), cgoAllocsUnknown
	crecovery_count, _ := (C.uint)(recovery_count), cgoAllocsUnknown
	__ret := C.leo_encode_work_count(coriginal_count, crecovery_count)
	__v := (uint32)(__ret)
	return __v
}

// leo_encode function as declared in leopard-go/leopard.h:180
func leo_encode(buffer_bytes uint, original_count uint32, recovery_count uint32, work_count uint32, original_data []unsafe.Pointer, work_data []unsafe.Pointer) LeopardResult {
	cbuffer_bytes, _ := (C.uint64_t)(buffer_bytes), cgoAllocsUnknown
	coriginal_count, _ := (C.uint)(original_count), cgoAllocsUnknown
	crecovery_count, _ := (C.uint)(recovery_count), cgoAllocsUnknown
	cwork_count, _ := (C.uint)(work_count), cgoAllocsUnknown
	coriginal_data, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&original_data)).Data)), cgoAllocsUnknown
	cwork_data, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&work_data)).Data)), cgoAllocsUnknown
	__ret := C.leo_encode(cbuffer_bytes, coriginal_count, crecovery_count, cwork_count, coriginal_data, cwork_data)
	__v := (LeopardResult)(__ret)
	return __v
}

// leo_decode_work_count function as declared in leopard-go/leopard.h:202
func leo_decode_work_count(original_count uint32, recovery_count uint32) uint32 {
	coriginal_count, _ := (C.uint)(original_count), cgoAllocsUnknown
	crecovery_count, _ := (C.uint)(recovery_count), cgoAllocsUnknown
	__ret := C.leo_decode_work_count(coriginal_count, crecovery_count)
	__v := (uint32)(__ret)
	return __v
}

// leo_decode function as declared in leopard-go/leopard.h:227
func leo_decode(buffer_bytes uint, original_count uint32, recovery_count uint32, work_count uint32, original_data []unsafe.Pointer, recovery_data []unsafe.Pointer, work_data []unsafe.Pointer) LeopardResult {
	cbuffer_bytes, _ := (C.uint64_t)(buffer_bytes), cgoAllocsUnknown
	coriginal_count, _ := (C.uint)(original_count), cgoAllocsUnknown
	crecovery_count, _ := (C.uint)(recovery_count), cgoAllocsUnknown
	cwork_count, _ := (C.uint)(work_count), cgoAllocsUnknown
	coriginal_data, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&original_data)).Data)), cgoAllocsUnknown
	crecovery_data, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&recovery_data)).Data)), cgoAllocsUnknown
	cwork_data, _ := (*unsafe.Pointer)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&work_data)).Data)), cgoAllocsUnknown
	__ret := C.leo_decode(cbuffer_bytes, coriginal_count, crecovery_count, cwork_count, coriginal_data, crecovery_data, cwork_data)
	__v := (LeopardResult)(__ret)
	return __v
}
